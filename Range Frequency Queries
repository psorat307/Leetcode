https://leetcode.com/problems/range-frequency-queries/

unordered_map<int,vector<int>> mp;
    
    RangeFreqQuery(vector<int>& arr) {
        for(int i=0;i<arr.size();i++)
            mp[arr[i]].push_back(i);
        }
    
    int query(int left, int right, int value) {
        vector<int>&v= mp[value];
        int lower= lower_bound(v.begin(),v.end(),left)-v.begin();
        int upper= upper_bound(v.begin(),v.end(),right)-v.begin();
        return upper-lower;
    }
    
    /*
Design a data structure to find the frequency of a given value in a given subarray.
The frequency of a value in a subarray is the number of occurrences of that value in the subarray.
Implement the RangeFreqQuery class:

RangeFreqQuery(int[] arr) Constructs an instance of the class with the given 0-indexed integer array arr.
int query(int left, int right, int value) Returns the frequency of value in the subarray arr[left...right].
A subarray is a contiguous sequence of elements within an array. arr[left...right] denotes the subarray that contains the elements 
of nums between indices left and right (inclusive).

Example 1:
Input
["RangeFreqQuery", "query", "query"]
[[[12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]], [1, 2, 4], [0, 11, 33]]
Output
[null, 1, 2]
