https://leetcode.com/problems/removing-minimum-and-maximum-from-array/

int minimumDeletions(vector<int>& nums) {
        int maxidx=max_element(begin(nums),end(nums))-begin(nums);
        int minidx=min_element(begin(nums),end(nums))-begin(nums);
        if(maxidx>minidx)swap(maxidx,minidx);
        int n=nums.size();
        return min({minidx+1,n-maxidx,maxidx+1+n-minidx});
    }

/*
Return the minimum number of deletions it would take to remove both the minimum and maximum element from the array.
Example 1:
Input: nums = [2,10,7,5,4,1,8,6]
Output: 5
Explanation: 
The minimum element in the array is nums[5], which is 1.
The maximum element in the array is nums[1], which is 10.
We can remove both the minimum and maximum by removing 2 elements from the front and 3 elements from the back.
This results in 2 + 3 = 5 deletions, which is the minimum number possible.
